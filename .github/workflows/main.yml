# This is the GitHub Action to run the CI for SODA Dashboard

name: SODA Installer CI

# Controls when the action will run. 
# Triggers the workflow on push or pull request events but only for the main branch
# Allows you to run this workflow manually from the Actions tab
on: [push, pull_request, workflow_dispatch]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        go-version: [1.13.x]
        os: [ubuntu-16.04]
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: ${{ matrix.go-version }}
          # Whether to download only stable versions
          stable: true # optional, default is true
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout the repository
        uses: actions/checkout@v2
      
      - name: List ansible sources in the runtime
        run: |
            echo "Installed Ansible Version in Runtime: "
            ansible --version
        
      - name: List ansible sources and  Remove latest ansible on Ubuntu 16.04
        run: |
            echo "List the ansible sources"
            ls /etc/apt/sources.list.d | grep ansible
            echo "Remove ansible sources other than the required version"
            sudo rm /etc/apt/sources.list.d/ansible-ubuntu-ansible-xenial.list /etc/apt/sources.list.d/ansible-ubuntu-ansible-xenial.list.save
            echo "Updating the pacakage list"
            sudo apt-get update
        if: ${{ matrix.os == 'ubuntu-16.04' }}

      # Change the permissions of the ansible installer
      - name: 'Make ansible installer executable and run install ansible on OS: ${{ matrix.os }}'
        run: |
            sudo chmod +x ./ansible/install_ansible.sh
            ./ansible/install_ansible.sh
        shell: bash
        env:
          CI: true
        if: ${{ always() }}

      - name: Check Python and Python3 version
        run: |
            echo "Python version:"
            python -V
            echo "Python3 version:"
            python3 -V
        if: ${{ matrix.os == 'ubuntu-16.04' }}

      - name: Setup and update Python3 to version 3.6 on Ubuntu 16.04
        run: |
          sudo chmod +x ./ci/config_ubuntu_xenial.sh
          ./ci/config_ubuntu_xenial.sh
        if: ${{ matrix.os == 'ubuntu-16.04' }}
      
      - name: 'Make the CI check executable and initiate the testing with SODA Containers'
        run: |
          sudo chmod +x ./ci/ci_check.sh
          ./ci/ci_check.sh container
        shell: bash
        env:
          GOPATH: "/home/runner/work/installer/"
        if: ${{ always() }}

      - name: 'Make the CI check executable and initiate the testing with SODA repository'
        run: |
          sudo chmod +x ./ci/ci_check.sh
          ./ci/ci_check.sh repository
        shell: bash
        env:
          GOPATH: "/home/runner/work/installer/"
        if: ${{ always() }}

      - name: 'Make the CI check executable and initiate the testing with SODA release'
        run: |
          sudo chmod +x ./ci/ci_check.sh
          ./ci/ci_check.sh release
        shell: bash
        env:
          GOPATH: "/home/runner/work/installer/"
        if: ${{ always() }}

      
      # Install Node on the runner
      - name: Install Node
        uses: actions/setup-node@v2
        with: 
          node-version: '10'
        if: ${{ always() }}
      
      - name: Setup the test environment
        run: |
          sudo chmod +x ./ci/e2e_tests/config_e2e_tests.sh
          cd ci/e2e_tests/ 
          ./config_e2e_tests.sh 
        if: ${{ always() }}

      - name: Run the E2E tests using Postman collections for API & Delfin
        id: run-newman-api
        run: |
          pwd
          cd ci/e2e_tests/
          echo "Running E2E tests for SODA API"
          npm run api_e2e
        if: ${{ always() }}

      # Upload the contents of Test Results directory to workspace
      - name: Publish the SODA API E2E Test report
        uses: actions/upload-artifact@v2
        with: 
          name: SODA_E2E_Test_Reports
          path: ci/e2e_tests/e2e_reports/*.html
          retention-days: 90
        if: ${{ always() }}

      - name: 'Uninstall SODA release and clean up'
        run: |
          sudo chmod +x ./ci/ci_check.sh
          ./ci/ci_check.sh uninstall_release
        shell: bash
        env:
          GOPATH: "/home/runner/work/installer/"
        if: ${{ always() }}
